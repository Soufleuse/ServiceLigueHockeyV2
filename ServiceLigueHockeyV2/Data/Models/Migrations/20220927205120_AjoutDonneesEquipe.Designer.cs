// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceLigueHockey.Data;

#nullable disable

namespace ServiceLigueHockeyV2.Data.Models.Migrations
{
    [DbContext(typeof(ServiceLigueHockeyContext))]
    [Migration("20220927205120_AjoutDonneesEquipe")]
    partial class AjoutDonneesEquipe
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.EquipeBd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnneeDebut")
                        .HasColumnType("int");

                    b.Property<int?>("AnneeFin")
                        .HasColumnType("int");

                    b.Property<int?>("EstDevenueEquipe")
                        .HasColumnType("int");

                    b.Property<string>("NomEquipe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Equipe", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnneeDebut = 1989,
                            NomEquipe = "Canadiensssss",
                            Ville = "Mourial"
                        },
                        new
                        {
                            Id = 2,
                            AnneeDebut = 1984,
                            NomEquipe = "Bruns",
                            Ville = "Albany"
                        },
                        new
                        {
                            Id = 3,
                            AnneeDebut = 1976,
                            NomEquipe = "Harfangs",
                            Ville = "Hartford"
                        },
                        new
                        {
                            Id = 4,
                            AnneeDebut = 1999,
                            NomEquipe = "Boulettes",
                            Ville = "Victoriaville"
                        },
                        new
                        {
                            Id = 5,
                            AnneeDebut = 2001,
                            NomEquipe = "Rocher",
                            Ville = "Percé"
                        },
                        new
                        {
                            Id = 6,
                            AnneeDebut = 1986,
                            NomEquipe = "Pierre",
                            Ville = "Rochester"
                        });
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.EquipeJoueurBd", b =>
                {
                    b.Property<int>("EquipeId")
                        .HasColumnType("int");

                    b.Property<int>("JoueurId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebutAvecEquipe")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFinAvecEquipe")
                        .HasColumnType("datetime2");

                    b.Property<short>("NoDossard")
                        .HasColumnType("smallint");

                    b.HasKey("EquipeId", "JoueurId", "DateDebutAvecEquipe");

                    b.HasIndex("JoueurId");

                    b.ToTable("EquipeJoueur", (string)null);
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.JoueurBd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaysOrigine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VilleNaissance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Joueur", (string)null);
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.StatsJoueurBd", b =>
                {
                    b.Property<int>("JoueurId")
                        .HasColumnType("int");

                    b.Property<int>("EquipeId")
                        .HasColumnType("int");

                    b.Property<short>("AnneeStats")
                        .HasColumnType("smallint");

                    b.Property<int>("ButsAlloues")
                        .HasColumnType("int");

                    b.Property<short>("Defaites")
                        .HasColumnType("smallint");

                    b.Property<short>("DefaitesEnProlongation")
                        .HasColumnType("smallint");

                    b.Property<double>("MinutesJouees")
                        .HasColumnType("float");

                    b.Property<short>("NbButs")
                        .HasColumnType("smallint");

                    b.Property<short>("NbMinutesPenalites")
                        .HasColumnType("smallint");

                    b.Property<short>("NbPartiesJouees")
                        .HasColumnType("smallint");

                    b.Property<short>("NbPasses")
                        .HasColumnType("smallint");

                    b.Property<short>("NbPoints")
                        .HasColumnType("smallint");

                    b.Property<short>("Nulles")
                        .HasColumnType("smallint");

                    b.Property<short>("PlusseMoins")
                        .HasColumnType("smallint");

                    b.Property<int>("TirsAlloues")
                        .HasColumnType("int");

                    b.Property<short>("Victoires")
                        .HasColumnType("smallint");

                    b.HasKey("JoueurId", "EquipeId", "AnneeStats");

                    b.HasIndex("EquipeId");

                    b.ToTable("StatsJoueur", (string)null);
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.EquipeJoueurBd", b =>
                {
                    b.HasOne("ServiceLigueHockey.Data.Models.EquipeBd", "Equipe")
                        .WithMany("listeEquipeJoueur")
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceLigueHockey.Data.Models.JoueurBd", "Joueur")
                        .WithMany("listeEquipeJoueur")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");

                    b.Navigation("Joueur");
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.StatsJoueurBd", b =>
                {
                    b.HasOne("ServiceLigueHockey.Data.Models.EquipeBd", "Equipe")
                        .WithMany()
                        .HasForeignKey("EquipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceLigueHockey.Data.Models.JoueurBd", "Joueur")
                        .WithMany("listeStatsJoueur")
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipe");

                    b.Navigation("Joueur");
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.EquipeBd", b =>
                {
                    b.Navigation("listeEquipeJoueur");
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.JoueurBd", b =>
                {
                    b.Navigation("listeEquipeJoueur");

                    b.Navigation("listeStatsJoueur");
                });
#pragma warning restore 612, 618
        }
    }
}
