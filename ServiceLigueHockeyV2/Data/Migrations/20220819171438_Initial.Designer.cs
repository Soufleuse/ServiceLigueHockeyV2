// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceLigueHockey.Data;

#nullable disable

namespace ServiceLigueHockeyV2.Data.Migrations
{
    [DbContext(typeof(ServiceLigueHockeyContext))]
    [Migration("20220819171438_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.EquipeBd", b =>
                {
                    b.Property<int>("No_Equipe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Annee_debut")
                        .HasColumnType("int");

                    b.Property<int?>("Annee_fin")
                        .HasColumnType("int");

                    b.Property<int?>("Est_Devenue_Equipe")
                        .HasColumnType("int");

                    b.Property<string>("Nom_Equipe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("No_Equipe");

                    b.ToTable("Equipe", (string)null);
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.EquipeJoueurBd", b =>
                {
                    b.Property<int>("No_Equipe")
                        .HasColumnType("int");

                    b.Property<int>("No_Joueur")
                        .HasColumnType("int");

                    b.Property<DateTime>("date_debut_avec_equipe")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("date_fin_avec_equipe")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("equipeBdNo_Equipe")
                        .HasColumnType("int");

                    b.Property<int>("joueurBdNo_Joueur")
                        .HasColumnType("int");

                    b.Property<short>("no_dossard")
                        .HasColumnType("smallint");

                    b.HasKey("No_Equipe", "No_Joueur", "date_debut_avec_equipe");

                    b.HasIndex("equipeBdNo_Equipe");

                    b.HasIndex("joueurBdNo_Joueur");

                    b.ToTable("EquipeJoueur", (string)null);
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.JoueurBd", b =>
                {
                    b.Property<int>("No_Joueur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date_Naissance")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Pays_origine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ville_naissance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("No_Joueur");

                    b.ToTable("Joueur", (string)null);
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.StatsJoueurBd", b =>
                {
                    b.Property<int>("No_Joueur")
                        .HasColumnType("int");

                    b.Property<int>("No_Equipe")
                        .HasColumnType("int");

                    b.Property<short>("AnneeStats")
                        .HasColumnType("smallint");

                    b.Property<int>("ButsAlloues")
                        .HasColumnType("int");

                    b.Property<short>("Defaites")
                        .HasColumnType("smallint");

                    b.Property<short>("DefaitesEnProlongation")
                        .HasColumnType("smallint");

                    b.Property<double>("MinutesJouees")
                        .HasColumnType("double");

                    b.Property<short>("NbButs")
                        .HasColumnType("smallint");

                    b.Property<short>("NbMinutesPenalites")
                        .HasColumnType("smallint");

                    b.Property<short>("NbPartiesJouees")
                        .HasColumnType("smallint");

                    b.Property<short>("NbPasses")
                        .HasColumnType("smallint");

                    b.Property<short>("NbPoints")
                        .HasColumnType("smallint");

                    b.Property<short>("Nulles")
                        .HasColumnType("smallint");

                    b.Property<short>("PlusseMoins")
                        .HasColumnType("smallint");

                    b.Property<int>("TirsAlloues")
                        .HasColumnType("int");

                    b.Property<short>("Victoires")
                        .HasColumnType("smallint");

                    b.Property<int>("equipeBdNo_Equipe")
                        .HasColumnType("int");

                    b.HasKey("No_Joueur", "No_Equipe", "AnneeStats");

                    b.HasIndex("equipeBdNo_Equipe");

                    b.ToTable("StatsJoueur", (string)null);
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.EquipeJoueurBd", b =>
                {
                    b.HasOne("ServiceLigueHockey.Data.Models.EquipeBd", "equipeBd")
                        .WithMany("listeEquipeJoueur")
                        .HasForeignKey("equipeBdNo_Equipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceLigueHockey.Data.Models.JoueurBd", "joueurBd")
                        .WithMany("listeEquipeJoueur")
                        .HasForeignKey("joueurBdNo_Joueur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("equipeBd");

                    b.Navigation("joueurBd");
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.StatsJoueurBd", b =>
                {
                    b.HasOne("ServiceLigueHockey.Data.Models.JoueurBd", "Joueur")
                        .WithMany("listeStatsJoueur")
                        .HasForeignKey("No_Joueur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ServiceLigueHockey.Data.Models.EquipeBd", "equipeBd")
                        .WithMany()
                        .HasForeignKey("equipeBdNo_Equipe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joueur");

                    b.Navigation("equipeBd");
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.EquipeBd", b =>
                {
                    b.Navigation("listeEquipeJoueur");
                });

            modelBuilder.Entity("ServiceLigueHockey.Data.Models.JoueurBd", b =>
                {
                    b.Navigation("listeEquipeJoueur");

                    b.Navigation("listeStatsJoueur");
                });
#pragma warning restore 612, 618
        }
    }
}
